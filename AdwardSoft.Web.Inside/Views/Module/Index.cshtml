@model List<AdwardSoft.Web.Inside.Models.ModuleViewModel>
@{
    ViewData["Title"] = "Module";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section StyleSheet{
    <link href="~/lib/MenuTable/menutable.css" rel="stylesheet" />
}

<div class="row">
    <div class="col-4">
        <div class="card">
            <div class="card-body" id="Form"></div>
        </div>
    </div>
    <div class="col-8">
        <div class="card" style="margin-bottom:unset !important">
            <div class="card-header header-elements-inline">
                <div class="form-group"></div>
                <div class="col-md-auto float-right">
                    <label class="clear-fix font-weight-semibold">Nhóm người dùng</label>
                    <select id="mtype-select" class="form-control select" asp-items="@Html.GetEnumSelectList<EUserType>()">
                        <option value="0">-- Tất cả --</option>
                    </select>
                </div>
            </div>
            <div class="card-body" id="menu-Table">
                <ads-module data="@Model" url_form="/Module/_Form"></ads-module>
            </div>
            <div class="col-md-12">
                <div class="d-flex justify-content-end align-items-center">
                    <a href="#" onclick="Sort()" class="btn btn-sm btn-primary">Cập nhật<i class="fa fa-check ml-1"></i></a>
                </div>
            </div>
            <div class="clear-fix"></div>
        </div>

    </div>

</div>

@section Scripts {
    <script src="~/lib/MenuTable/jquery.menutable.js"></script>
    <script>
        $(document).ready(function () {
            loadFindId(0)
            $('#menutable').menutable();
            $(document).on('change', '#IsPublic', function (e) {
                let formId = $(this).closest('form').attr('id');
                let displayElementId = '#' + formId + ' #module_for_type_' + formId.replace('_FormView-', '')
                if ($(this).is(":checked")) {
                    $(displayElementId).addClass('d-none')
                } else {
                    $(displayElementId).removeClass('d-none')
                }
            })
            $(document).on('change', '#mtype-select', function (e) {
                $("#menutable li").removeClass('d-none')
                if ($(this).val() !== '0')
                    $("#menutable li:not(.mtype-public):not(.mtype-" + $(this).val() + ")").addClass('d-none')
            })

        })

        var rebindValidation = function () {
            $('form').each(function (i, f) {
                $form = $(f);
                $form.removeData('validator');
                $form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse($form);
            });
        }

        function loadFindId(id) {
            $.ajax({
                url: "@Url.Action("_Form", "Module")",
                method: "GET",
                data: { "id": id },
                success: function (data) {
                    $("#Form").empty();
                    $("#Form").html(data);
                    $('.select').select2({
                        minimumResultsForSearch: Infinity
                    });
                    if (id === 0) {
                        new Switchery(document.querySelector('.form-check-input-switchery'));
                    }
                }
            });
        }

        function Collapse(id) {
            var div = $(".mn-handle-details[data-id='handleCollapse-" + id + "']")
            div.removeClass("show");
            div.one("transitionend", function () {
                div.empty();
            });
        }

        function Submit(action, id) {
            if ($("#_FormView-" + id).valid()) {
                var data = $("#_FormView-" + id).serializeArray()
                $.ajax({
                    url: "Module/" + action,
                    method: "POST",
                    displaysetings: {
                        success: false,
                        error: true,
                        showIndicator: true,
                        hideIndicator: true
                    },
                    data: data,
                    success: function (data) {
                        if (data.succeeded)
                            setTimeout(function () { location.reload(); }, 500)
                    }
                })
            }

        }

        function Sort() {
            var json = $('.mn').menutable('serialize');

            $.ajax({
                url: "@Url.Action("Sort", "Module")",
                method: "POST",
                data: { "json": JSON.stringify(json) },
                dataType: "json",
                success: function (data) {
                    swal({
                        title: "Thành công!",
                        text: "Sắp xếp thành công",
                        type: "success"
                    }).then(function (check) {
                        if (check.value) {
                            location.reload();
                        }
                    })
                },
                error: function (error) {
                    swal({
                        title: "Lỗi!",
                        text: "Sắp xếp thất bại",
                        type: "warning"
                    });
                }
            });
        }

        var moduleSuccess = function () {
            location.reload();
        }
    </script>
}