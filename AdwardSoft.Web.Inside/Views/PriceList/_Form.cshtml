@model PriceListViewModel

@{
    var defaultDate = default(DateTime);
    var isNew = Model.Date == defaultDate;
    var methodAction = isNew ? "Post" : "Put";
    var action = isNew ? "Create" : "Update";
    Model.Date = isNew ? DateTime.Now : Model.Date;
    Model.Status = isNew ? Convert.ToInt16(2) : Model.Status;
}

<form asp-controller="PriceList" asp-action="@action" class="form-validate-jquery form-content" id="_FormView" callbackfn="PriceListSuccess()" method="@methodAction">
    <div class="modal-header">
        <input type="text" hidden asp-for="@Model.Status" value="@Model.Status" />
        @if (isNew)
        {
            <h5 class="modal-title">@EText.Create.Description() </h5>
        }
        else
        {
            <h5 class="modal-title">@EText.Update.Description() </h5>
            <input type="text" hidden asp-for="@Model.Date" value="@Model.Date" />
        }
    </div>
    <div class="modal-body row">
        <div class="form-group col-md-12">
            <label asp-for="Date" class="clear-fix font-weight-semibold ads-control"></label>
            @if (isNew)
            {
                <input type="text" asp-for="@Model.Date" value="@Model.Date" class="form-control daterange-single">
            }
            else
            {
                <input type="text" disabled="disabled" asp-for="@Model.Date" value="@Model.Date" class="form-control daterange-single">
            }
        </div>
        <div class="form-group col-md-12">
            <label asp-for="Title" class="clear-fix font-weight-semibold ads-control"></label>
            <input type="text" asp-for="@Model.Title" value="@Model.Title" class="form-control" />
            <span asp-validation-for="@Model.Title" class="validation-invalid-label"></span>
        </div>
        <div class="form-group col-md-12">
            <label asp-for="Note" class="clear-fix font-weight-semibold"></label>
            <textarea asp-for="@Model.Note" value="@Model.Note" rows="3" cols="3" class="form-control"></textarea>
            <span asp-validation-for="@Model.Note" class="validation-invalid-label"></span>
        </div>
        <div class="form-group col-md-12">
            <label asp-for="Status" class="clear-fix font-weight-semibold"></label>
            <select class="form-control select" disabled="disabled" asp-for="@Model.Status" asp-items="@Html.GetEnumSelectList<EPriceListStatus>()">
            </select>
        </div>
    </div>
    <div class="modal-footer row">
        <div class="col-md-12">
            <div class="d-flex justify-content-end align-items-center clear-fix">
                <a href="#" onclick="ReadByDate(@defaultDate)" class="btn btn-light ml-1 btn-sm">@EText.Cancel.Description() <i class="fas fa-times mr-1"></i></a>
                @if (isNew)
                {
                    <button type="submit" class="btn btn-success ml-1 btn-sm mr-0">@EText.Create.Description() <i class="fa fa-check ml-1"></i></button>
                }
                else
                {
                    <button type="submit" class="btn btn-success ml-1 btn-sm mr-0">@EText.Update.Description() <i class="fa fa-check ml-1"></i></button>
                }
            </div>
        </div>
    </div>
</form>

<script>
    $(document).ready(function () {
        $('.select').select2({
            minimumResultsForSearch: Infinity
        });
        $('.select-search').select2();
        console.log(@Model.Status)
        setTimeout(rebindValidation, 500);
    });
</script>