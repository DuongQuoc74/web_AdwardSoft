<div class="modal-header">
    <h5 class="modal-title">@EPromotionType.DiscountCombo.Description()</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body">
    <div class="row">
        <div class="col-4">
            <div class="card">
                <div class="card-body" id="fPromotionGift"></div>
            </div>
        </div>
        <div class="col-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">@EPromotionType.DiscountCombo.Description()'s List</h5>
                    <input hidden id="PId" value="@ViewBag.PromotionId">
                </div>
                <div class="card-body">
                    <table id="PromotionGiftTable" class="table datatable-save-state w-100">
                        <thead>
                            <tr>
                                <th width="25%" class="text-center">Purchase Product Name</th>
                                <th width="25%" class="text-center">Gift Product Name</th>
                                <th width="20%" class="text-center">Promo Type</th>
                                <th width="20%" class="text-center">Promo Amount</th>
                                <th width="10%"></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
        $(document).ready(function () {
            var PromotionGiftAction = $.templates("#PromotionGiftAction");
            var $PromotionGiftTable = $("#PromotionGiftTable").DataTable({
                processing: true,
                responsive: true,
                ajax: function (data, callback, settings) {
                    $.ajax({
                        data: {
                            "promotionId": @ViewBag.PromotionId
                        },
                        url: "@Url.Action("Read", "PromotionGift")",
                        method: "POST",
                        success: function (response) {
                            callback({ data: response });
                        },
                        error: function (error) {
                            console.log(error)
                        }
                    });
                },
                pageLength: 10,
                paging: true,
                serverSide: false,
                cache: false,
                lengthChange: false,
                filter: true,
                search: true,
                columns: [
                    {
                        data: "purchaseProductName",
                        render: function (data, type, row) {
                            return data;
                        }
                    },
                    {
                        data: "giftProductName",
                        render: function (data, type, row) {
                            return data;
                        }
                    },
                    {
                        data: "promoType",
                        render: function (data, type, row) {
                             switch (data) {
                                case 0:
                                     return "<p class='text-info'>@Html.Raw(EPromotionAmountType.Value.Description())</p>";
                                case 1:
                                     return "<p class='text-success'>@Html.Raw(EPromotionAmountType.Rate.Description())</p>";
                            }

                        }
                    },
                    {
                        data: "promoAmount",
                        render: function (data, type, row) {
                            return FormatCurrency(data);
                        }
                    },
                    {
                        data: {},
                        render: function (data, type, row) {
                            return PromotionGiftAction.render({ data: data })
                        }
                    },
                ],
                columnDefs: [
                    {
                        className: "text-center", targets: [0,1,2]
                    }
                ],
                language: {
                    search: '<div class="row">_INPUT_</div>',
                    searchPlaceholder: 'Search...',
                    info: "<span style='padding-left:2%;'>Page _PAGE_ / _PAGES_</span>",
                    paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' },
                    processing: "",
                    infoEmpty: "",
                    emptyTable: "No data",
                    zeroRecords: "No data",
                    infoFiltered: "",
                    processing: "Waiting for me!!!",
                }
            });
            ReadGiftById(0);
        });


        var PromotionGiftSuccess = function () {
            $('#PromotionGiftTable').DataTable().ajax.reload();
            ReadGiftById(0);
        }

        var PromotionGiftUpdateSucess = function () {
            var tmp = $("#PromotionGiftTable").DataTable().page();
            $('#PromotionGiftTable').DataTable().ajax.reload();
            $('#PromotionGiftTable').DataTable().page(tmp).draw('page');
            ReadGiftById(0);
        }


        function ReadGiftById(purchaseProductId, giftProductId) {
            $.ajax({
                url: "@Url.Action("_Form", "PromotionGift")",
                method: "GET",
                data: {
                    "purchaseProductId": purchaseProductId,
                    "giftProductId": giftProductId,
                    "promotionId": $("#PId").val()
                },
                success: function (data) {
                    $("#fPromotionGift").empty();
                    $("#fPromotionGift").html(data);
                },
                error: function (data) {
                },
            });
        }

</script>
<script id="PromotionGiftAction" type="text/x-jsrender">
    <div class="list-icons">
        <div class="list-icons-item dropdown">
            <a href="#" class="list-icons-item dropdown-toggle caret-0" data-toggle="dropdown"><i class="icon-menu9"></i></a>
            <div class="dropdown-menu dropdown-menu-right">
                <a  callbackfn="PromotionGiftSuccess()" onclick="ReadGiftById('{{:data.purchaseProductId}}','{{:data.giftProductId}}')" class="dropdown-item">
                    <i class="icon-pencil7" data-toggle="tooltip" title="@EText.TooltipEdit.Description()"></i>
                    @EText.Edit
                </a>
                <a href="#" class="dropdown-item remove-item" data-action="/PromotionGift/Delete" callbackfn="PromotionGiftSuccess()" data-params='{"promotionId":"{{:data.promotionId}}","purchaseProductId":"{{:data.purchaseProductId}}","giftProductId":"{{:data.giftProductId}}"}'>
                    <i class="icon-trash" data-toggle="tooltip" title="Remove"></i>
                    @EText.Remove
                </a>
            </div>
        </div>
    </div>
</script>

