@model ReceivingReportDataTableViewModel
@{ 
    Layout = "~/Views/Shared/_Layout.cshtml";                
    ViewData["Title"] = "Receiving Report ";               
    var Suppliers = @ViewBag.Suppliers; 
    var Employees = @ViewBag.Employees; 
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">Receiving Report </h5>
                <div class="card-header header-elements-md-inline">
                    <div class="row">

                    </div>
                    <div class="row">
                        <div class="col-md-auto float-right">
                            <label class="clear-fix font-weight-semibold">Suppliers</label>
                            <select id="supplier-select" class="form-control select-search" asp-items="Suppliers">
                                <option value="0" selected>-- All --</option>
                            </select>
                        </div>
                        <div class="col-md-auto float-right">
                            <label class="clear-fix font-weight-semibold">Employee</label>
                            <select class="form-control select-search" id="employee-select" asp-items="Employees">
                                <option value="0">-- All --</option>
                            </select>
                        </div>
                        <div class="col-md-auto float-right">
                            <label class="clear-fix font-weight-semibold">Date</label>
                            <div class="form-group-feedback form-group-feedback-left ">
                                <input type="text" id="date-filter" class="form-control">
                                <div class="form-control-feedback">
                                    <i class="icon-calendar22"></i>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="card-body">
                <table id="ReceivingReportTable" class="table datatable-save-state w-100">
                    <thead>
                        <tr>
                            <th>
                                <label asp-for="Date"></label>
                            </th>
                            <th>
                                <label asp-for="No"></label>
                            </th>
                            <th>
                                <label asp-for="Supplier"></label>
                            </th>
                            <th>
                                <label asp-for="Address"></label>
                            </th>
                            <th>
                                <label asp-for="Phone"></label>
                            </th>
                            <th>
                                <label asp-for="TotalQuantity"></label>
                            </th>
                            <th>
                                <label asp-for="TotalAmount"></label>
                            </th>
                            <th>
                                <label asp-for="Status"></label>
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script id="ReceivingReportAction" type="text/x-jsrender">
        <div class="list-icons">
            <div class="list-icons-item dropdown">
                <a href="#" class="list-icons-item dropdown-toggle caret-0" data-toggle="dropdown"><i class="icon-menu9"></i></a>
                <div class="dropdown-menu dropdown-menu-right">
                    <a data-params='{"id":"{{:data.id}}"}' href="@Url.Action("_Form","ReceivingReport")" checkvalidate="true" modal-size="modal-lg" callbackfn="ReceivingReportSucess()" class="dropdown-item modal-link">
                        <i class="icon-pencil7" data-toggle="tooltip" title="Edit"></i>
                        @EText.Edit
                    </a>
                    {{if data.status == 0}}
                    <a class="dropdown-item " href="#" onclick="updateStatus('{{:data.id}}', 1)">
                        <i class="icon-enter" data-toggle="tooltip" title="@EReportReceivingStatus.Approved.Description()"></i>
                        @EReportReceivingStatus.Approved.Description()
                    </a>
                    <a class="dropdown-item " href="#" onclick="updateStatus('{{:data.id}}', 2)">
                        <i class="icon-cancel-circle2" data-toggle="tooltip" title="@EReportReceivingStatus.Trash.Description()"></i>
                        @EReportReceivingStatus.Trash.Description()
                    </a>
                    {{/if}}
                    {{if data.status == 1}}
                    <a class="dropdown-item " href="#" onclick="updateStatus('{{:data.id}}', 2)">
                        <i class="icon-cancel-circle2" data-toggle="tooltip" title="@EReportReceivingStatus.Trash.Description()"></i>
                        @EReportReceivingStatus.Trash.Description()
                    </a>
                    {{/if}}
                    <a data-params='{"id":"{{:data.id}}"}' callbackfn="ReceivingReportSucess()" href="#" class="dropdown-item remove-item" data-action="/ReceivingReport/Delete">
                        <i class="icon-trash" data-toggle="tooltip" title="Remove"></i>
                        Remove
                    </a>
                </div>
            </div>
        </div>
    </script>

    <script>
        var $SupplierSelect = $('#supplier-select')
        var $EmployeeSelect = $('#employee-select')
        var $DateFilter = $('#date-filter')
        var $ReceivingReportTable
        var ReceivingReportAction = $.templates("#ReceivingReportAction")

        $(document).ready(function () {
            $(function () {
                $("#titlePage").text('Receiving Report ')
            });
            $('.select').select2({
                minimumResultsForSearch: Infinity
            })
            $('.select-search').select2();
        });

        $DateFilter.daterangepicker({
            applyClass: 'bg-slate-600',
            cancelClass: 'btn-light',
            singleDatePicker: false,
            timePicker: false,
            autoclose: true,
            opens: 'right',
            //minDate: new Date(new Date().getFullYear(), 0, 1),
            //maxDate: new Date(new Date().getFullYear(), 11, 31),
            startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),
            endDate: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0),
            locale: {
                format: 'DD/MM/YYYY'
            }
        })

        $ReceivingReportTable = $("#ReceivingReportTable").DataTable({
            processing: true,
            responsive: true,
            ajax: function (data, callback, settings) {
                $.ajax({
                    data: {
                        "model": data,
                        "date": $DateFilter.val(),
                        "supplierId": $SupplierSelect.val(),
                        "createUser": $EmployeeSelect.val(),
                    },
                    url: "@Url.Action("Read", "ReceivingReport")",
                    method: "POST",
                    success: function (response) {
                        callback({ data: response.data, draw: response.draw, recordsFiltered: response.recordsFiltered, recordsTotal: response.recordsTotal });
                    }
                })
            },
            lengthMenu: [10, 25, 50, 75, 100],
            paging: true,
            serverSide: true,
            cache: false,
            lengthChange: true,
            filter: true,
            search: true,
            order: false,
            columns: [
                {
                    data: "date",
                    render: (data, type, row) => moment(data).format('DD/MM/YYYY')
                },
                { data: "no" },
                { data: "supplier" },
                { data: "address" },
                { data: "phone" },
                {
                    data: "totalQuantity",
                    render: (data, type, row) => FormatCurrency(data)
                },
                {
                    data: "totalAmount",
                    render: (data, type, row) => FormatCurrency(data)
                },
                {
                    data: "status",
                    render: function (data, type, row) {
                        if (Number(data) == 0) {
                            return "<span class='text-warning'>@EReportReceivingStatus.Wating.Description()</span>";
                        }
                        else if (Number(data) == 1) {
                            return "<span class='text-primary'>@EReportReceivingStatus.Approved.Description()</span>";
                        }
                        else {
                            return "<span class='text-danger'>@EReportReceivingStatus.Trash.Description()</span>";
                        }
                    }
                },
                {
                    data: {},
                    render: function (data, type, row) {
                        return (ReceivingReportAction.render({ data: data }));
                    }
                }
            ],
            //dom: 'Blfrtip',
            language: {
                search: '<div class="row">_INPUT_</div>',
                searchPlaceholder: 'search...',
                info: "<span style='padding-left:2%;'>Page _PAGE_ / _PAGES_</span>",
                paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' },
                processing: "",
                infoEmpty: "",
                emptyTable: "@EText.EmptyTable.Description()",
                zeroRecords: "@EText.EmptyTable.Description()",
                infoFiltered: "",
                processing: "@EText.Processing.Description()",
            }
        })
    </script>

    @* ------ Events ------ *@

    <script>
        var updateStatus = function (id, status) {
            swal({
                title: 'Are you sure ?',
                text: 'Are you sure update status',
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirm!',
                cancelButtonText: 'Back'
            }).then(function (check) {
                if (check.value) {
                    $.ajax({
                        url: "/ReceivingReport/UpdateStatus",
                        method: "PUT",
                        data: {
                            "id": id,
                            "status": status
                        },
                        success: function (result) {
                            if (result) {
                                new PNotify({
                                    title: 'Successful notification',
                                    text: 'Update status success',
                                    addclass: 'bg-success border-success'
                                });
                            } else {
                                new PNotify({
                                    title: 'Failure notification',
                                    text: 'Update status fail',
                                    addclass: 'bg-warning border-warning'
                                });
                            }  
                            ReceivingReportSucess();
                        }
                    });
                }
            });
            
        }

        var ReceivingReportSucess = function () {
            var tmp = $ReceivingReportTable.page();
            $ReceivingReportTable.ajax.reload();
            $ReceivingReportTable.page(tmp).draw('page');
        }

        $DateFilter.on('change', function (e) {
            ReceivingReportSucess();
        })

        $SupplierSelect.on('change', function (e) {
            ReceivingReportSucess();        
        })

        $EmployeeSelect.on('change', function (e) {
            ReceivingReportSucess();   
        })

        @*$EmployeeSelect.select2(
            {
                ajax: {
                    delay: 150,
                    url: '@Url.Action("Search", "Employee")',
                    dataType: 'json',
                    data: function (params) {
                        params.page = params.page || 1;
                        return {
                            searchTerm: params.term,
                            pageSize: 10,
                            pageNumber: params.page,
                        };
                    },
                    processResults: function (data, params) {
                        params.page = params.page || 1;
                        return {
                            results: $.map(data.items, function (obj) {
                                return {
                                    id: obj.id,
                                    text: obj.text
                                };
                            }),
                            pagination: {
                                more: (params.page * 10) < data.total
                            }
                        };
                    },
                    cache: true
                },
                placeholder: "-- Select --",
                minimumInputLength: 0,
                allowClear: true,
            }
        );*@
    </script>
}
