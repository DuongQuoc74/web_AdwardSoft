@model UnitViewModel
@{
    ViewData["Title"] = "Unit";
}

<div class="row">
    <div class="col-3">
        <div class="card" id="_Form">

        </div>
    </div>
    <div class="col-9">
        <div class="card">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">Danh sách đơn vị tính</h5>
            </div>
            <div class="card-body">
                <table id="UnitTable" class="table datatable-save-state w-100">
                    <thead>
                        <tr>
                            <th>
                                <label asp-for="Code"></label>
                            </th>
                            <th>
                                <label asp-for="Name"></label>
                            </th>
                            <th>
                                <label asp-for="Status"></label>
                            </th>
                            <th class="text-center text-muted" style="width: 30px;"><i class="icon-checkmark3"></i></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script id="UnitAction" type="text/x-jsrender">
        <div class="list-icons">
            <div class="list-icons-item dropdown">
                <a href="#" class="list-icons-item dropdown-toggle caret-0" data-toggle="dropdown"><i class="icon-menu9"></i></a>
                <div class="dropdown-menu dropdown-menu-right">
                    @* -- Edit -- *@
                    <a onclick="ReadById('{{:id}}')" class="dropdown-item">
                        <i class="icon-pencil7" data-toggle="tooltip" title="Edit"></i> 
                        @EText.Edit.Description()
                    </a>
                    @* -- Remove -- *@
                    <a data-action="/Unit/Delete" callbackfn="UnitSuccess()" data-params='{"id":"{{:id}}"}' href="#" class="dropdown-item remove-item">
                        <i class="icon-trash" data-toggle="tooltip" title="Remove"></i>
                        @EText.Remove.Description()
                    </a>
                </div>
            </div>
        </div>
    </script>
    <script>
        $(document).ready(function () {
            setTimeout(rebindValidation, 500);
            ReadById(0)
        })

        var rebindValidation = function () {
            $('form').each(function (i, f) {
                $form = $(f);
                $form.removeData('validator');
                $form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse($form);
            });

            $('.select-search').select2();
            $('.form-check-input-switch').bootstrapSwitch();
            $('.daterange-single').daterangepicker({
                singleDatePicker: true,
                timePicker: false,
                locale: {
                    format: 'MM-DD-YYYY'
                },
                autoclose: true,
                yearPicker: true,
            });

        };

        var $UnitTable
        var UnitAction = $.templates("#UnitAction");
        $UnitTable = $("#UnitTable").DataTable({
                ajax: function (data, callback, settings) {
                    $.ajax({
                        url: "@Url.Action("Read", "Unit")",
                        method: "GET",
                        success: function (response) {
                            callback({ data: response })
                        }
                    })
                },
                pageLength: 10,
                paging: true,
                cache: false,
                lengthChange: false,
                filter: false,
                search: false,
                columns: [
                    { data: "code" },
                    { data: "name" },

                    {
                        data: "status",
                        render: (data, type, row) => data === 0 ? '<p class="text-danger">@EStatus.Unavailable.Description()</p>' : '<p class="text-success">@EStatus.Available.Description()</p>'
                    },
                    {
                        data: "id",
                        render: function (data, type, row) {
                            return (UnitAction.render({ id: data }));
                        }
                    },
                ],
                language: {
                    info: "<span style='padding-left:2%;'>Trang _PAGE_ / _PAGES_</span>",
                    paginate: { 'first': 'First', 'last': 'Last', 'next': $('html').attr('dir') == 'rtl' ? '&larr;' : '&rarr;', 'previous': $('html').attr('dir') == 'rtl' ? '&rarr;' : '&larr;' },
                    processing: "",
                    infoEmpty: "",
                    emptyTable: "Không có dữ liệu ..."
                }
            });

        function ReadById(id) {
            $.ajax({
                url: "@Url.Action("_Form", "Unit")",
                method: "GET",
                data: { "id": id },
                success: function (data) {
                    $("#_Form").empty();
                    $("#_Form").html(data);
                    rebindValidation()
                }
            });
        };

        var UnitSuccess = function () {
            $UnitTable.ajax.reload();
            ReadById(0)
        };
    </script>


}

